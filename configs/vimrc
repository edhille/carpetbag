" pathogen
call pathogen#infect()
call pathogen#helptags()

" layout
set ruler
set nu
set wrap

" help keep lines to the appropriate length
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%>131v.\+/
set lbr
set tw=130

" search
set ignorecase
set smartcase
set hlsearch
set incsearch

" tabs
set noexpandtab
set tabstop=4
set shiftwidth=4
set autoindent

" but let files have overrides...
set modeline

" enable clipboard copying in osx
set clipboard=unnamed

" folding
"let javascript_fold=1
let ruby_fold=1
let perl_fold=1
let perl_fold_blocks=1
set foldlevel=4

" misc
let g:netrw_fastbrowse=0
set nobackup
filetype plugin indent on
syntax on
set ttymouse=xterm

" javascript tweaks
" NOTE: assumes we have javascript.vim syntax file from https://github.com/jelera/vim-javascript-syntax
au FileType javascript call JavaScriptFold()
au BufNewFile,BufRead *.pjs setf javascript

" tweaks for specific filetypes 
if !exists("custom_file_formatting_loaded")
	let custom_file_formatting_loaded=1
	autocmd FileType perl call PerlFileSettings()
	au BufNewFile,BufRead *.cap setf ruby
	autocmd FileType ruby set tabstop=2 shiftwidth=2 autoindent
	"autocmd FileType javascript set autoindent
endif

function! PerlFileSettings()
	set cindent
	set cinkeys=0{,0},!^F,o,O,e
endfunction

augroup markdown
	au! BufRead,BufNewFile *.mkd   setfiletype mkd
augroup END

" color stuff
" disable background erase (so colors draw nice in tmux)
set t_ut=
" optimistically assume we are on 256-color terminal
set t_Co=256
set background=dark

" NOTE: in tmux, using both these colorschemes creates an acceptable palette (singly, neither do....)
"colorscheme 256-grayvim " ok...
"colorscheme devbox-dark-256 " good...
"colorscheme twilight256
"colorscheme desert
"colorscheme torte
colorscheme xoria256

" Give a shortcut key to NERD Tree
map <C-n> :NERDTreeToggle<CR>

" Give a shortcut key to running validations
map <F5> :Make<CR><C-w><Up>

" PHP folding (really buggy...)
map <F6> <Esc>:EnableFastPHPFolds<Cr>
map <F7> <Esc>:EnablePHPFolds<Cr>
map <F8> <Esc>:DisablePHPFolds<Cr>

" Help Syntastic find the right .jshintrc per project
function s:find_jshintrc(dir)
    let l:found = globpath(a:dir, '.jshintrc')
    if filereadable(l:found)
        return l:found
    endif

    let l:parent = fnamemodify(a:dir, ':h')
    if l:parent != a:dir
        return s:find_jshintrc(l:parent)
    endif

    return "~/.jshintrc"
endfunction

function UpdateJsHintConf()
    let l:dir = expand('%:p:h')
    let l:jshintrc = s:find_jshintrc(l:dir)
    let g:syntastic_javascript_jshint_conf = l:jshintrc
endfunction

au BufEnter * call UpdateJsHintConf()

" Ctrl-P
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll)$'
  \ }

" airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
set laststatus=2
